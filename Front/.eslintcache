[{"C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\index.js":"1","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\App.js":"2","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\serviceWorker.js":"3","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\redux\\redux-store.js":"4","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\routes.js":"5","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\redux\\map-reducer.js":"6","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\context\\AuthContext.js":"7","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Authorization\\authHook.js":"8","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Header\\HeaderContainer.jsx":"9","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\api\\authAPI.js":"10","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\api\\dataAPI.js":"11","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Authorization\\AuthorizationContainer.jsx":"12","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\DataBase\\DataBaseContainer.jsx":"13","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Map\\MapContainer.jsx":"14","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\redux\\header-reducer.js":"15","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Header\\Header.jsx":"16","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Authorization\\messageHook.js":"17","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\api\\requestHttp.js":"18","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Authorization\\Authorization.jsx":"19","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\DataBase\\DataBase.jsx":"20","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Map\\Map.jsx":"21","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Map\\Slider\\Slider.jsx":"22","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Map\\GoogleMap\\MapGoogle.jsx":"23","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Map\\GoogleMap\\MapDirectionsRenderer.jsx":"24"},{"size":610,"mtime":1623827686920,"results":"25","hashOfConfig":"26"},{"size":800,"mtime":1623827689728,"results":"27","hashOfConfig":"26"},{"size":5086,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":398,"mtime":1613636605816,"results":"29","hashOfConfig":"26"},{"size":1623,"mtime":1613678088575,"results":"30","hashOfConfig":"26"},{"size":16850,"mtime":1623779571048,"results":"31","hashOfConfig":"26"},{"size":210,"mtime":1613035825800,"results":"32","hashOfConfig":"26"},{"size":865,"mtime":1613677076263,"results":"33","hashOfConfig":"26"},{"size":3061,"mtime":1613384356223,"results":"34","hashOfConfig":"26"},{"size":1233,"mtime":1613676214917,"results":"35","hashOfConfig":"26"},{"size":1876,"mtime":1613585769906,"results":"36","hashOfConfig":"26"},{"size":1102,"mtime":1623787429804,"results":"37","hashOfConfig":"26"},{"size":1436,"mtime":1613392666646,"results":"38","hashOfConfig":"26"},{"size":5785,"mtime":1613679826013,"results":"39","hashOfConfig":"26"},{"size":710,"mtime":1601295436277,"results":"40","hashOfConfig":"26"},{"size":1532,"mtime":1613396429884,"results":"41","hashOfConfig":"26"},{"size":206,"mtime":1612988172773,"results":"42","hashOfConfig":"26"},{"size":2468,"mtime":1613575524164,"results":"43","hashOfConfig":"26"},{"size":1707,"mtime":1613390005479,"results":"44","hashOfConfig":"26"},{"size":2553,"mtime":1612863136613,"results":"45","hashOfConfig":"26"},{"size":2558,"mtime":1623783057058,"results":"46","hashOfConfig":"26"},{"size":2043,"mtime":1623782830726,"results":"47","hashOfConfig":"26"},{"size":3314,"mtime":1623837385761,"results":"48","hashOfConfig":"26"},{"size":2458,"mtime":1623837539433,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1nkffgf",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},"C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\index.js",[],["112","113"],"C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\App.js",[],"C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\serviceWorker.js",[],"C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\redux\\redux-store.js",[],"C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\routes.js",["114","115","116","117","118","119"],"import React, { useContext } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport { useAuth } from './components/Authorization/authHook';\r\nimport {AuthorizationContainer} from './components/Authorization/AuthorizationContainer';\r\nimport DataBaseContainer from './components/DataBase/DataBaseContainer';\r\nimport MapContainer from './components/Map/MapContainer';\r\nimport { getDataThunkCreator } from './redux/map-reducer';\r\n//TODO: отслеживать изменение store после обновления страницы через токен. Если авторизирован юзер, то делать запрос на сервер. \r\nexport const useRoutes = isAuthetificated => {\r\n    const {token, login, logout, userId} = useAuth();\r\n    const dispatch = useDispatch();\r\n\r\n    debugger;\r\n    if (isAuthetificated) {\r\n        //тут запрос на получение данных\r\n        return (\r\n            <Switch>\r\n                <Route path = '/map' exact>\r\n                    <MapContainer token = {token}/>\r\n                </Route>\r\n                <Route path = '/dataBase' exact>\r\n                    <DataBaseContainer />\r\n                </Route>\r\n                <Route path = '/aboutSite' exact>\r\n                </Route>\r\n                <Redirect to = \"/map\" />\r\n            </Switch>\r\n        )        \r\n    }\r\n    return (\r\n        <Switch>\r\n            <Route path = '/' exact>\r\n                <AuthorizationContainer/>\r\n            </Route>\r\n            <Redirect to = '/' />\r\n        </Switch>\r\n    )\r\n}","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\redux\\map-reducer.js",["120","121","122","123","124","125","126","127","128"],"import React from 'react';\r\nimport {AuthAPI} from '../api/authAPI';\r\nimport { getFactories, getProducts, getCustomers } from '../api/dataAPI';\r\n\r\nconst CHOOSE_FACTORY = 'CHOOSE_FACTORY';\r\nconst CHOOSE_PRODUCT = 'CHOOSE_PRODUCT';\r\nconst GET_PRODUCTS = 'GET_PRODUCTS';\r\nconst CHOOSE_CUSTOMER = 'CHOOSE_CUSTOMER';\r\nconst SWIPE_SLIDE = 'SWIPE_SLIDE';\r\nconst SET_PRODUCTS = 'SET_PRODUCTS';\r\nconst SET_FACTORIES = 'SET_FACTORIES';\r\nconst SET_CUSTOMERS = 'SET_CUSTOMERS';\r\n\r\nlet initialState = {\r\n    factories: [],    \r\n    products: [],\r\n    customers: [],\r\n    prodArray: [],\r\n\r\n    className: 'check',\r\n    showProductsIndex: 0,\r\n    swipeSliderWay: 0,\r\n    factoriesArray: [], //массив заводов, для построения координат\r\n    factoriesArrayOfCoordinates: [], //массивы координат заводов и заказчиков\r\n    customersArrayOfCoordinates:[],\r\n}        \r\n        \r\nexport const getDataThunkCreator = (token, dispatch) =>  {\r\n    debugger;\r\n    getProducts(token).then((data) => {\r\n        dispatch(setProductsAC(data));\r\n    });\r\n    getFactories(token).then((data) => {\r\n        dispatch(setFactoriesAC(data));\r\n    });\r\n    getCustomers(token).then((data) => {\r\n        dispatch(setCustomersAC(data));\r\n    });\r\n}\r\nexport const setProductsAC = (data) => ({type: SET_PRODUCTS, data});\r\nexport const setFactoriesAC = (data) => ({type: SET_FACTORIES, data});\r\nexport const setCustomersAC = (data) => ({type: SET_CUSTOMERS, data});\r\nexport const getFactoryAC = (index) => ({type: CHOOSE_FACTORY, index});\r\nexport const getProductAC = (flag, index) => ({type: GET_PRODUCTS, flag, index});\r\nexport const chooseProductAC = (index, arIndex) => ({type: CHOOSE_PRODUCT, index, arIndex});\r\nexport const chooseCustomerAC = (id) => ({type: CHOOSE_CUSTOMER, id});\r\nexport const swipeSlideAC = (way) => ({type: SWIPE_SLIDE, way});\r\n\r\nexport const mapReducer = (state = initialState, action) => {\r\n    const pushArray = (index) => {\r\n        state.prodArray = [];\r\n        if (index + 3 <= state.products.length) {\r\n            for (let i = index; i < index + 3; i++) {\r\n                state.prodArray.push(state.products[i]);\r\n            }\r\n        }\r\n        else {\r\n            for (let i = index; i < state.products.length; i++) {\r\n                state.prodArray.push(state.products[i]);\r\n            }\r\n        }\r\n\r\n    }\r\n    //заполнение массива заводов\r\n    const chooseFactories = (indexProd) => {\r\n        if (state.products[indexProd].checked) { \r\n            debugger;\r\n            let factories = state.factoriesArray;\r\n            let indexOfOneFactory = 0;\r\n            let deletLastFactory = false;\r\n            let chosenFactory = 0;\r\n            let flagStopPushFact = false;\r\n            factories.push(state.products[action.index].factoriesID);\r\n            if (factories.length > 1) {\r\n                for ( let i = 0; i < factories.length-1; i++) {\r\n                    if (!flagStopPushFact) {                    \r\n                        let factoryChosenFlag = false;\r\n                        let countSum = 0;                    \r\n                        for ( let j = 0; j < factories[i].length; j++) {                        \r\n                            for ( let x = i+1; x < factories.length; x++) {\r\n                                for ( let y = 0; y < factories[x].length; y++) {\r\n                                    if (factories[i][j] === factories[x][y]) {\r\n                                        factoryChosenFlag = true;\r\n                                        deletLastFactory = true;\r\n                                        countSum++;\r\n                                        chosenFactory = factories[x][y];\r\n                                    }\r\n                                }\r\n                                if (!factoryChosenFlag){\r\n                                    indexOfOneFactory = x;\r\n                                    chosenFactory = state.products[action.index].factoriesID[0];\r\n                                }\r\n                            }\r\n                        }\r\n                        if (countSum > 0) { //если сумма больше 0, то остается это же значение\r\n                            factories[i] = [chosenFactory];\r\n                            flagStopPushFact = true;\r\n                        }\r\n                        if (factories[indexOfOneFactory].length === 1 && !factoryChosenFlag || factories.length < 3) {\r\n                            chosenFactory = state.products[action.index].factoriesID[0];\r\n                            factories[indexOfOneFactory] = [chosenFactory];\r\n                            flagStopPushFact = false;\r\n\r\n                        }\r\n                        else {\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n                state.factories[chosenFactory].productsId.push(indexProd);//завод, в который нужно вписать выбранный продукт\r\n                if (deletLastFactory) {\r\n                    factories.pop();\r\n                }\r\n            }\r\n            else {\r\n                //для 1 массива\r\n                factories = [[state.products[action.index].factoriesID[0]]];\r\n                state.factories[state.products[action.index].factoriesID[0]].productsId.push(indexProd);//завод, в который нужно вписать выбранный продукт\r\n            }\r\n            //проверка и удаление дубликатов, если есть в массиве заводов !!!!!!!!!!!!!!!!!\r\n            state.factoriesArray = factories;\r\n        }\r\n        else {\r\n            debugger;\r\n            //удаляем завод из массива\r\n            let factInd = state.factoriesArray;\r\n            let stopDeleteFactories = false;\r\n            let checkingFactories = state.products[indexProd].factoriesID;\r\n            for (let i = 0; i < checkingFactories.length; i++) {\r\n                if (!stopDeleteFactories){\r\n                    let productsInFactory = state.factories[checkingFactories[i]].productsId;\r\n                    if (productsInFactory.length !== 0){\r\n                        let indexToDelete = productsInFactory.indexOf(indexProd);\r\n                        let indToDelFactInfactInd;\r\n                        for (let j = 0; j < factInd.length; j++) {\r\n                            if (factInd[j][0] === checkingFactories[i])\r\n                            indToDelFactInfactInd = j;\r\n                        }\r\n                        if (indexToDelete != undefined && indexToDelete != -1) {\r\n                            if (productsInFactory.length === 1) {//===0 скип еще добавить\r\n                                productsInFactory.pop();\r\n                                //factInd.pop()\r\n\r\n                                if (indToDelFactInfactInd === 0) {\r\n                                    factInd.shift();\r\n                                }\r\n                                if (indToDelFactInfactInd > 0 && indToDelFactInfactInd < factInd.length-1) {\r\n                                    let beforeDel = factInd.slice(0,indToDelFactInfactInd);\r\n                                    let afterDel = factInd.slice(indToDelFactInfactInd+1,factInd.length);\r\n                                    factInd = beforeDel;\r\n                                    afterDel.forEach(e => {factInd.push(e)});\r\n                                }\r\n                                if (indToDelFactInfactInd === factInd.length-1 && indToDelFactInfactInd !== 0) {\r\n                                    factInd.pop();\r\n                                }\r\n\r\n                                state.factoriesArray = factInd;\r\n                                state.factories[checkingFactories[i]].productsId = productsInFactory;\r\n                                stopDeleteFactories = true;\r\n                            }\r\n                            else {\r\n                                let deleteProdInFactory = productsInFactory.indexOf(indexProd);\r\n                                if (deleteProdInFactory === 0) {\r\n                                    productsInFactory.shift();\r\n                                }\r\n                                if (deleteProdInFactory > 0 && deleteProdInFactory < productsInFactory.length-1) {\r\n                                    let beforeDeleteIndex = productsInFactory.slice(0, deleteProdInFactory);\r\n                                    let afterDeleteIndex = productsInFactory.slice(deleteProdInFactory+1, productsInFactory.length);\r\n                                    productsInFactory = beforeDeleteIndex;\r\n                                    afterDeleteIndex.forEach(e=>{productsInFactory.push(e)});\r\n                                }\r\n                                if (deleteProdInFactory === productsInFactory.length-1 && deleteProdInFactory !== 0) {\r\n                                    productsInFactory.pop();\r\n                                }\r\n                                state.factories[state.products[indexProd].factoriesID[i]].productsId = productsInFactory;\r\n\r\n                                //чистим, если нужно factoriesArray\r\n                                if (state.factories[state.products[indexProd].factoriesID[i]].productsId.length > 0) {\r\n                                    state.factoriesArray = factInd;\r\n                                }\r\n                                else {\r\n                                    if (indToDelFactInfactInd === 0) {\r\n                                        factInd.shift();\r\n                                    }\r\n                                    if (indToDelFactInfactInd > 0 && indToDelFactInfactInd < factInd.length-1) {\r\n                                        let beforeDel = factInd.slice(0,indToDelFactInfactInd);\r\n                                        let afterDel = factInd.slice(indToDelFactInfactInd,factInd.length);\r\n                                        factInd = beforeDel + afterDel;\r\n                                    }\r\n                                    if (indToDelFactInfactInd === factInd.length-1 && indToDelFactInfactInd !== 0) {\r\n                                        factInd.pop();\r\n                                    }\r\n                                    state.factoriesArray = factInd;\r\n                                }\r\n                                stopDeleteFactories = true;\r\n                                state.factoriesArray = factInd;\r\n                            }\r\n                        }\r\n                    }                    \r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //выставляем координаты\r\n    const factoriesCoordinates = () => {\r\n        let factoriesArrayOfCoordinates = [];\r\n        let factories = state.factoriesArray;\r\n    }\r\n    switch (action.type) {\r\n        case CHOOSE_FACTORY: {\r\n            return {...state, factoryIndex: action.index}\r\n        }\r\n        case GET_PRODUCTS: {\r\n            if (action.flag && action.index >= state.products.length-3) {}   \r\n            else if (!action.flag && action.index !== 0) {\r\n                state.showProductsIndex -= 3;\r\n                pushArray(state.showProductsIndex);\r\n            }\r\n            else if (!action.flag && action.index === 0)\r\n                state.showProductsIndex = 0;\r\n            else if (action.flag && action.index >= 0 && action.index < state.products.length) {\r\n                state.showProductsIndex += 3;\r\n                pushArray(state.showProductsIndex);\r\n            }\r\n            return {...state};\r\n        }\r\n        case CHOOSE_PRODUCT: {\r\n            debugger;\r\n            state.products[action.index].checked = !state.products[action.index].checked;\r\n            state.prodArray[action.arIndex].checked = state.products[action.index].checked;\r\n            //заполнение массива заводов\r\n            chooseFactories(action.index);\r\n            //координаты\r\n            factoriesCoordinates();\r\n            if (state.prodArray[action.arIndex].checked && state.className === 'check') return {...state, className: 'active_check'}\r\n            else if (!state.prodArray[action.arIndex].checked && state.className === 'active_check') return {...state, className: 'check'}\r\n            else if (!state.prodArray[action.arIndex].checked && state.className === 'check') return {...state, className: 'active_check'}\r\n            else return {...state, className: 'check'}\r\n        }\r\n        case CHOOSE_CUSTOMER: {\r\n            debugger;\r\n            state.customers[action.id].checked = !state.customers[action.id].checked;\r\n            //заполнение массива заказчиков\r\n            let coordinates = state.customers[action.id].coordinates;\r\n            if(state.customers[action.id].checked){\r\n                state.customersArrayOfCoordinates.push(coordinates);\r\n            }\r\n            else {\r\n                let indexToDelete = state.customersArrayOfCoordinates.indexOf(coordinates);\r\n                if (state.customersArrayOfCoordinates.length === 1) {\r\n                    state.customersArrayOfCoordinates = [];\r\n                }\r\n                else if ((indexToDelete === 0) && (state.customersArrayOfCoordinates.length === 1)) {\r\n                    state.customersArrayOfCoordinates.slice(1, state.customersArrayOfCoordinates.length);\r\n                }\r\n                else if ((indexToDelete === state.customersArrayOfCoordinates.length - 1) && (state.customersArrayOfCoordinates.length > 1)) {\r\n                    state.customersArrayOfCoordinates = state.customersArrayOfCoordinates.slice(0, indexToDelete);\r\n                }\r\n                else {\r\n                    let arrayBeforeDeleteInd = [];\r\n                    let arrayAfterDeleteInd = [];\r\n                    arrayBeforeDeleteInd = state.customersArrayOfCoordinates.slice(0, indexToDelete);\r\n                    arrayAfterDeleteInd = state.customersArrayOfCoordinates.slice(indexToDelete+1, state.customersArrayOfCoordinates.length);\r\n                    state.customersArrayOfCoordinates = [];\r\n                    arrayBeforeDeleteInd.forEach(element => {state.customersArrayOfCoordinates.push(element)});\r\n                    arrayAfterDeleteInd.forEach(element => {state.customersArrayOfCoordinates.push(element)});                    \r\n                }\r\n            } \r\n            return {...state};\r\n        }\r\n        case SWIPE_SLIDE: {\r\n            state.swipeSliderWay = action.way;\r\n            return {...state}\r\n        }\r\n        case SET_PRODUCTS: {\r\n            state.products = action.data.products;\r\n            for (let i = 0; i < 3; i++) {\r\n                state.prodArray.push(action.data.products[i]);\r\n            }\r\n            state.products.forEach(p => {\r\n                p.checked = false;\r\n            });\r\n            return {...state}\r\n        }\r\n        case SET_FACTORIES: {\r\n            debugger;\r\n            state.factories = action.data.factories;\r\n            state.factories.forEach(f => {\r\n                f.productsId = [];\r\n            })\r\n            return {...state}\r\n        }\r\n        case SET_CUSTOMERS: {\r\n            debugger;\r\n            state.customers = action.data.customers;\r\n            state.customers.forEach(c => {\r\n                c.checked = false;\r\n            });\r\n            return {...state}\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n/*\r\n\"name\": \"Однослойная поливинилхлоридная пленка\",\r\n\"price\": \"32$\",\r\n\"img\": \"https://sp.cargo-avto.ru/upload/resize_cache/iblock/c83/600_600_183e0ae78cac7b43584231bec35e8e127/9600976.jpg\",\r\n\"factoriesID\": [0],\r\n\"info\": \"\"\r\n\r\n\"name\": \"Многослойная поливинилхлоридная пленка\",\r\n\"price\": \"40$\",\r\n\"img\": \"https://izomernn.ru/wp-content/uploads/2016/04/%D0%BC%D0%B0%D1%82%D0%BE%D0%B2%D0%B0%D1%8F-%D0%BF%D0%BB%D0%B5%D0%BD%D0%BA%D0%B0.jpg?v=1612943721\",\r\n\"factoriesID\": [0],\r\n\"info\": \"\"\r\n\r\n\"name\": \"Термоусадочная пленка\",\r\n\"price\": \"45$\",\r\n\"img\": \"https://b2b-postavki.ru/foto/DE/plenki-termousadochnye.jpg\",\r\n\"factoriesID\": [0],\r\n\"info\": \"\"\r\n\r\n\"name\": \"Полиэтиленовая пленка\",\r\n\"price\": \"27$\",\r\n\"img\": \"https://paket64.ru/sites/default/files/rustekhprom-polimer-poliyetilenovaya-plenka-vysokogo-davleniya-pvd_0.jpg\",\r\n\"factoriesID\": [0],\r\n\"info\": \"\"\r\n\r\n\"name\": \"Полиэтиленовая пузырьковая пленка\",\r\n\"price\": \"36$\",\r\n\"img\": \"https://stroimoll.ru/upload/iblock/59f/puzirkovaya_plenka.png\",\r\n\"factoriesID\": [0],\r\n\"info\": \"\"*/","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\context\\AuthContext.js",[],"C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Authorization\\authHook.js",["129"],"import React, {useState, useCallback, useEffect} from 'react';\r\n\r\nconst storageName = 'userData';\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null);\r\n    const [userId, setUserId] = useState(null);\r\n\r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken);\r\n        setUserId(id);\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken\r\n        }));\r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null);\r\n        setUserId(null);\r\n        localStorage.removeItem(storageName);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName));\r\n        if (data && data.token) {\r\n            login(data.token, data.userId);\r\n        }\r\n    },[login])\r\n\r\n    return {login, logout, token, userId}\r\n}","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Header\\HeaderContainer.jsx",["130","131","132"],"import React, {useReducer, useEffect, useContext} from 'react';\r\nimport {headerReducer, toggleMenuAC, toggleLinkAC} from '../../redux/header-reducer';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport {useHistory} from 'react-router-dom'; \r\nimport Header from './Header';\r\n\r\nconst HeaderContainer = () => {\r\n    const auth = useContext(AuthContext);\r\n    const history = useHistory();\r\n\r\n    const logoutHandler = event => {\r\n        event.preventDefault();\r\n        auth.logout();\r\n        history.push('/');\r\n    }\r\n    const [state, dispatch] = useReducer(headerReducer,\r\n        [\r\n            {\r\n                burgerClass: 'header_burger',\r\n                menuClass: 'header_menu'\r\n            },\r\n            {\r\n                header: [\r\n                    {\r\n                        id: 0,\r\n                        name: 'Карта',\r\n                        class: 'header_link',\r\n                        activeClass: 'header__link_active',\r\n                        way: '/map',\r\n                        active: false\r\n                    },\r\n                    {\r\n                        id: 1,\r\n                        name: 'База Данных',\r\n                        class: 'header_link',\r\n                        activeClass: 'header__link_active',\r\n                        way: '/dataBase',\r\n                        active: false\r\n                    },\r\n                    {\r\n                        id: 2,\r\n                        name: 'Инструкция',\r\n                        class: 'header_link',\r\n                        activeClass: 'header__link_active',\r\n                        way: '/instruction',\r\n                        active: false\r\n                    },\r\n                    {\r\n                        id: 3,\r\n                        name: 'О сайте',\r\n                        class: 'header_link',\r\n                        activeClass: 'header__link_active',\r\n                        way: '/aboutSite',\r\n                        active: false\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                activeLink: false\r\n            }            \r\n        ]\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (state.activateMenu){\r\n            state[0].burgerClass = 'header_burger active';\r\n            state[0].menuClass = 'header_menu active';\r\n        }\r\n\r\n        else {\r\n            state[0].burgerClass = 'header_burger';\r\n            state[0].menuClass = 'header_menu';\r\n        }\r\n    }, [state.activateMenu]);\r\n\r\n    useEffect(() => {\r\n        if (state[2].activeLink){\r\n            state[2].activeLink = true;\r\n        }\r\n\r\n        else {\r\n            state[2].activeLink = false;\r\n        }\r\n        \r\n    }, [state[2].activeLink]);\r\n\r\n    const toggleMenu = () => {\r\n        dispatch (toggleMenuAC());\r\n    }\r\n    const toggleLink = () => {\r\n        dispatch (toggleLinkAC());\r\n    }\r\n    return <Header toggleMenu = {toggleMenu} toggleLink = {toggleLink} menuClassName = {state} logout = {logoutHandler}/>    \r\n}\r\n\r\nexport default HeaderContainer;","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\api\\authAPI.js",["133","134","135"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useMessage } from '../components/Authorization/messageHook';\r\nimport {useHttp} from './requestHttp';\r\n\r\nexport const AuthAPI = (form) => {\r\n    const {request, loading, error, clearError} = useHttp();\r\n    const auth = useContext(AuthContext);\r\n    const message = useMessage();\r\n    const loadingForm = loading;\r\n\r\n    useEffect(() => {\r\n        message(error);\r\n        clearError();\r\n    },[error, message, clearError])\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/register', 'POST', {...form});\r\n            message(data.message);\r\n            loadingForm = loading;\r\n        } catch (e) {}\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            debugger;\r\n            const data = await request('/api/auth/login', 'POST', {...form});\r\n            auth.login(data.token, data.userId);\r\n            return data;\r\n        } catch (e) {}        \r\n    }\r\n\r\n    return {loginHandler, registerHandler, loadingForm};    \r\n}\r\n\r\n//сделать простые запросы fetch или axios\r\n\r\nexport default AuthAPI;\r\n","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\api\\dataAPI.js",["136","137","138","139"],"import React from 'react';\r\n\r\nexport const getProducts = async (token) => { //получаю данные, сетаю их в стейт\r\n    let productsData   \r\n    try {\r\n        debugger;\r\n        let responceProducts = await fetch('/api/auth/productsData', {\r\n            method: 'GET', \r\n            body: null,\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        })\r\n        .then(function(data) {\r\n            productsData = data.json();\r\n            console.log(productsData);\r\n\r\n        });\r\n        console.log(productsData);\r\n        return productsData;\r\n    } catch (e) {\r\n        console.log(e.message)\r\n    }\r\n} \r\nexport const getCustomers = async (token) => { //получаю данные, сетаю их в стейт\r\n    let customersData;\r\n    \r\n    try {        \r\n        let responceCustomers = await fetch('/api/auth/customersData', {\r\n            method: 'GET', \r\n            body: null,\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        })\r\n        .then(function(data) {\r\n            customersData = data.json();\r\n            console.log(customersData);\r\n        });\r\n        console.log(customersData);\r\n        return customersData;\r\n    } catch (e) {\r\n        console.log(e.message)\r\n    }\r\n} \r\nexport const getFactories = async (token) => { //получаю данные, сетаю их в стейт\r\n    let factoriesData;\r\n    \r\n    try {\r\n        let responceFactories = await fetch('/api/auth/factoriesData', {\r\n            method: 'GET', \r\n            body: null,\r\n            headers: {Authorization: `Bearer ${token}`}\r\n        })\r\n\r\n        .then(function(data) {\r\n            factoriesData = data.json();\r\n            console.log(factoriesData);\r\n        });\r\n            \r\n        console.log(factoriesData);\r\n        return factoriesData;\r\n    } catch (e) {\r\n        console.log(e.message)\r\n    }\r\n} ","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Authorization\\AuthorizationContainer.jsx",["140","141","142"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport Authorization from './Authorization';\r\nimport './Authorization.css';\r\nimport 'materialize-css';\r\nimport { AuthAPI } from '../../api/authAPI'\r\nimport {getDataThunkCreator} from '../../redux/map-reducer';\r\nimport { connect, useDispatch } from 'react-redux';\r\n\r\nexport const AuthorizationContainer = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [form, setForm] = useState({\r\n        email: '', password: ''\r\n    });\r\n    const {registerHandler, loginHandler, loadingForm} = AuthAPI({...form});\r\n\r\n    const changeHandler = event => {\r\n        setForm({...form, [event.target.name]: event.target.value});\r\n    }\r\n    \r\n    const register = async () => {\r\n        registerHandler();\r\n    }\r\n    const login = async () => { \r\n        debugger;\r\n        await loginHandler({...form}).then(function(data) {\r\n            getDataThunkCreator(data.token, dispatch);\r\n        });\r\n    }\r\n    return (<Authorization registerHandler = {register} loginHandler = {login} changeHandler = {changeHandler} loading = {loadingForm}/>)\r\n}","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\DataBase\\DataBaseContainer.jsx",[],"C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Map\\MapContainer.jsx",["143","144","145","146","147","148","149"],"import React, { useEffect, useReducer, useState, useCallback, useContext } from 'react';\r\nimport Map from './Map';\r\nimport {connect} from 'react-redux';\r\nimport {getFactoryAC, getProductAC, chooseCustomerAC, chooseProductAC, swipeSlideAC, mapReducer, getDataThunkCreator} from '../../redux/map-reducer';\r\nimport { useAuth } from '../Authorization/authHook';\r\n\r\n//TODO: переделать в хук\r\n\r\nclass MapContainer extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        debugger \r\n        //api    \r\n        if (this.props.token) {\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {   \r\n     \r\n    }\r\n    changeCustomerStatus = () => {\r\n        this.setState({\r\n            customerInfo: this.props.customerInfo\r\n        })\r\n    }\r\n    render(){\r\n        return <Map changeFactoryIndex = {this.props.changeFactoryIndex}  factoryInfo = {this.props.factoryInfo}\r\n                    chooseCustomer = {this.props.chooseCustomer} customerInfo = {this.props.customerInfo}\r\n                    swipeSlider = {this.props.swipeSlider} swipeSliderWay = {this.props.swipeSliderWay}\r\n                    productsInfo = {this.props.productsInfo} showProducts = {this.props.showProducts} \r\n                    changeProducts = {this.props.changeProducts} prodArray = {this.props.prodArray}\r\n                    chooseProduct = {this.props.chooseProduct} className = {this.props.className}\r\n                    changeCustomerStatus = {this.changeCustomerStatus} factoriesArray = {this.props.factoriesArray}\r\n                    customersCoordinates = {this.props.customersCoordinates} keyValue = {-1}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        factoryInfo: state.mapContentData.factories,\r\n        productsInfo: state.mapContentData.products,\r\n        showProducts: state.mapContentData.showProductsIndex,\r\n        prodArray: state.mapContentData.prodArray,\r\n        className: state.mapContentData.className,\r\n        customerInfo: state.mapContentData.customers,\r\n        swipeSliderWay: state.mapContentData.swipeSliderWay,\r\n        factoriesArray: state.mapContentData.factoriesArray,\r\n        customersCoordinates: state.mapContentData.customersArrayOfCoordinates\r\n    };\r\n}\r\n\r\nlet mapDispatchToprops = (dispatch) =>{\r\n    return {\r\n        changeFactoryIndex: (index) => {\r\n            dispatch(getFactoryAC(index));\r\n        },\r\n        changeProducts: (flag, index) => {\r\n            dispatch(getProductAC(flag, index));\r\n        },\r\n        chooseCustomer: (id) => {\r\n            dispatch(chooseCustomerAC(id))//в этот АС добавляются ещё и координаты для пути\r\n        },\r\n        chooseProduct: (index, arIndex) => {\r\n            dispatch(chooseProductAC(index, arIndex))//в этот АС добавляются ещё и координаты для пути\r\n        },\r\n        swipeSlider: (way) => {\r\n            dispatch(swipeSlideAC(way));\r\n        },\r\n        getData: (token) => {\r\n            getDataThunkCreator(token, dispatch);\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(MapContainer);\r\n\r\n\r\n/*const MapContainer = () => {\r\n    //const [state, setState, dispatch] = useReducer(mapReducer);\r\n    const {request} = useHttp();\r\n    const [state, setState, dispatch] = useState(null);\r\n    const {token} = useContext(AuthContext);\r\n    let productsData, customersData, factoriesData;\r\n    debugger;\r\n    const getAllData = useCallback(async () => {\r\n        try {\r\n            productsData = await request('/api/data/productsData', 'GET', null, {Authorization: `Bearer ${token}`});\r\n            console.log(productsData);\r\n            customersData = await request('/api/data/customersData', 'GET', null, {Authorization: `Bearer ${token}`});\r\n            factoriesData = await request('/api/data/factoriesData', 'GET', null, {Authorization: `Bearer ${token}`});\r\n            const allData = {productsData, customersData, factoriesData};\r\n            setState(allData);\r\n        } catch (e) {}\r\n    },[token, request]);\r\n    getAllData();\r\n\r\n    useEffect(() => {\r\n        debugger;\r\n        getAllData();\r\n    },[getAllData]);\r\n\r\n    const changeFactoryIndex = (index) => {\r\n        dispatch(getFactoryAC(index));\r\n    }\r\n    const changeProducts = (flag, index) => {\r\n        dispatch(getProductAC(flag, index));\r\n    }\r\n    const chooseCustomer = (id) => {\r\n        dispatch(chooseCustomerAC(id))//в этот АС добавляются ещё и координаты для пути\r\n    }\r\n    const chooseProduct = (index, arIndex) => {\r\n        dispatch(chooseProductAC(index, arIndex))//в этот АС добавляются ещё и координаты для пути\r\n    }\r\n    const swipeSlider = (way) => {\r\n        dispatch(swipeSlideAC(way));\r\n    }\r\n    \r\n    return <Map changeFactoryIndex = {changeFactoryIndex}  factoryInfo = {state.factories}\r\n                    chooseCustomer = {chooseCustomer} customerInfo = {state.customers}\r\n                    swipeSlider = {swipeSlider} swipeSliderWay = {state.swipeSliderWay}\r\n                    productsInfo = {productsData} showProducts = {state.showProductsIndex} \r\n                    changeProducts = {changeProducts} prodArray = {state.prodArray}\r\n                    chooseProduct = {chooseProduct} className = {state.className}\r\n                    factoriesArray = {state.factoriesArrayOfCoordinates} customersCoordinates = {state.customersArrayOfCoordinates} \r\n                    keyValue = {-1}/>\r\n}*/\r\n\r\n/*\r\nconst {loading, request, error, clearError} = useHttp();\r\n\r\n        const getProductsData = async () => {\r\n            try {\r\n                const data = await request('/api/auth/productsData', 'POST');\r\n            } catch (e) {}\r\n        }\r\n*/","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\redux\\header-reducer.js",[],"C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Header\\Header.jsx",["150","151"],"import React from 'react';\r\nimport './Header.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from '../assets/logo.svg';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div>\r\n            <header className = 'header'>\r\n                <a className = 'header_logo' href=\"#\">\r\n                    <img src= {logo} alt=\"\"/>\r\n                </a>\r\n                <div className = {props.menuClassName[0].burgerClass} onClick = {() => {props.toggleMenu()}}>\r\n                    <span></span>\r\n                </div>\r\n                <nav className = {props.menuClassName[0].menuClass}>\r\n                    <ul className = 'header_list'>\r\n                        {props.menuClassName[1].header.map((element) => {\r\n                            return (\r\n                                <div key = {element.id}>\r\n                                    <li key = {element.id}> <NavLink  className = {props.menuClassName[2].activeLink ? element.activeClass : element.class}\r\n                                         onClick = {() => {props.toggleLink()}} to = {element.way}> {element.name} </NavLink> </li>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        <li>\r\n                            <a  className = {'header_link'}\r\n                                         onClick = {props.logout}> Выйти </a></li>\r\n                    </ul>\r\n                </nav>\r\n            </header>        \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Authorization\\messageHook.js",[],"C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\api\\requestHttp.js",["152"],"import React, {useState, useCallback} from 'react';\r\n\r\n//запросы на сервер\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true);\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n            }\r\n            const responce = await fetch(url, {method, body, headers});\r\n            const data = await responce.json();\r\n\r\n            if (!responce.ok) {\r\n                throw new Error(data.message || 'Smth is wrong');\r\n            }\r\n            setLoading(false);\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    },[]);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}\r\n\r\n/*\r\n\r\n\r\n/*\r\n\r\nimport React, {useState, useCallback} from 'react';\r\n\r\n//запросы на сервер\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback( (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true);\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n            }\r\n            debugger;\r\n            let data;\r\n            const responce =  fetch(url, {method, body, headers})\r\n                .then(function (responce) {\r\n                    responce.json()\r\n                    .then(function (d) {\r\n                        console.log('it is d ', d);\r\n                        debugger;\r\n                        data = d;\r\n                        return data;\r\n                    })\r\n                });\r\n\r\n            if (!responce.ok) {\r\n                throw new Error(data.message || 'Smth is wrong');\r\n            }\r\n            setLoading(false);\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    },[]);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}\r\n\r\n\r\n/*\r\n\r\n\r\n\r\n*/\r\n","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Authorization\\Authorization.jsx",[],"C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\DataBase\\DataBase.jsx",[],"C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Map\\Map.jsx",[],"C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Map\\Slider\\Slider.jsx",["153","154"],"import React from 'react';\r\nimport './Slider.css';\r\n\r\nconst Slider = (props) => {\r\n    //'elements_card'\r\n    return (        \r\n        <div className = 'slide_container'>\r\n            <div className = 'slides'>            \r\n                {props.elementsArray.map((elements, index) => {\r\n                    return (\r\n                        <div className = 'elements_card' key = {index}>\r\n                                <div className = 'elements_card_image'>\r\n                                    <img src = {elements.img} alt = ''/>\r\n                                    </div>\r\n                                <div className = 'elements_name'>\r\n                                    <p>{elements.name}</p>\r\n                                </div>\r\n                                <div className = 'elements_description'>\r\n                                    {elements.info}\r\n                                </div>\r\n                                    <input className = {elements.checked ? 'active_check' : 'check'} \r\n                                        type = 'button' value = {elements.checked ? 'Убрать' : 'Выбрать'} \r\n                                        onClick = {() => {debugger ; props.chooseElements(elements._id, index)}}>                                    \r\n                                    </input>\r\n                        </div>\r\n                    );                                                               \r\n                })}\r\n            </div>\r\n            <a className='slider_control slider_control_prev' id = 'swipe' href = '#'\r\n                onClick = {() => {props.changeElements(false, props.showElements); props.swipeSlider(1)}}>\r\n                <span></span>\r\n            </a>\r\n            <a className='slider_control slider_control_next' id = 'swipe' href = '#'\r\n                onClick = {() => {props.changeElements(true, props.showElements); props.swipeSlider(2)}}>\r\n                    <span></span>\r\n            </a>\r\n        </div>    \r\n    );\r\n}\r\nexport default Slider;","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Map\\GoogleMap\\MapGoogle.jsx",["155","156","157"],"import React from 'react';\r\nimport './MapGoogle.css';\r\nimport {MapDirectionsRenderer} from './MapDirectionsRenderer';\r\nimport {GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow} from 'react-google-maps'\r\n\r\n// TODO: HOOK для MapGoogle\r\n// TODO: InfoWindow\r\n\r\nexport const ShowOnTheMap = (props) => {\r\n    return(\r\n        <Marker key = {props._id} position = {{\r\n                lat: props.coordinates[0], lng: props.coordinates[1]                \r\n            }}\r\n            icon = {props.checked ? \"https://img.icons8.com/doodle/30/000000/marker--v1.png\" : \"https://img.icons8.com/plasticine/30/000000/marker.png\"}\r\n            onClick={()=>{\r\n                /*//let selectedMarker = props;\r\n                return (\r\n                    <InfoWindow position = {{\r\n                        lat: props.coordinates[0], lng: props.coordinates[1]                \r\n                        }}>                        \r\n                        <div>{props.name}</div>\r\n                    </InfoWindow>\r\n                )*/\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport const  MapGoogle = (props) =>{\r\n    let coordinatesOfFactoriesAndCustomers = [];\r\n\r\n    const ShowMap = () => {\r\n        return (\r\n            <GoogleMap defaultZoom = {5} defaultCenter = {{lat: 52.51545, lng: 13.3736}} >\r\n                {ShowChosenFactories()}\r\n                {ShowCustomers()}\r\n                <MapDirectionsRenderer elements = {coordinatesOfFactoriesAndCustomers}/>\r\n            </GoogleMap>\r\n        )\r\n    }\r\n    const ShowChosenFactories = () => {\r\n        let factoriesMarkers = [];\r\n        let chosenFactories = [];\r\n        debugger;\r\n        if (props.factoriesArray) {\r\n        for ( let i = 0; i < props.factoriesArray.length; i++) {\r\n            for ( let j = 0; j < props.factoryInfo.length; j++) {\r\n                if (props.factoriesArray[i][0] === props.factoryInfo[j]._id){\r\n                    chosenFactories.push(props.factoryInfo[j]);\r\n                    coordinatesOfFactoriesAndCustomers.push(props.factoryInfo[j])\r\n                }\r\n            }\r\n        }\r\n    }\r\n        /*return (\r\n            chosenFactories.map(element => {\r\n                factoriesMarkers.push(ShowOnTheMap(element))\r\n                return factoriesMarkers\r\n            })                \r\n        )*/\r\n    }\r\n    const ShowCustomers = () => {\r\n        debugger;\r\n        return (\r\n            props.customerInfo.map(element => {\r\n                if (element.checked) {\r\n                    coordinatesOfFactoriesAndCustomers.push(element);\r\n                }\r\n                else {\r\n                    //let deleteItemIndex = customerMarkers.indexOf(ShowOnTheMap(element));\r\n                    //if (deleteItemIndex > -1) customerMarkers.splice(deleteItemIndex,1);\r\n                }\r\n            })                \r\n        )\r\n    }     \r\n    const WrappedMap = withScriptjs(withGoogleMap(ShowMap));\r\n    return (\r\n        <WrappedMap \r\n            googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDPFar_hr412glanOG5gRLPPi5iJx-rttc\"\r\n            loadingElement={<div style={{ height: `100%` }} />}\r\n            containerElement={<div style={{ height: `100%` }} />}\r\n            mapElement={<div style={{ height: `100%` }} />}\r\n        />\r\n    )\r\n}\r\n","C:\\Users\\YuraRazrab\\Desktop\\diplim-app-v2\\Front\\src\\components\\Map\\GoogleMap\\MapDirectionsRenderer.jsx",["158","159","160"],"import React, {useState, useEffect} from 'react';\r\nimport {DirectionsRenderer} from 'react-google-maps'\r\n\r\nexport  const MapDirectionsRenderer = (props) => {\r\n    const [directions, setDirections] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    useEffect(() => {\r\n      debugger;\r\n      if (props.elements != undefined && props.elements.length !== 0) {      \r\n        let factoryInfo = props.elements.factoryInfo;\r\n        let customerInfo = props.elements.customerInfo;\r\n        let coordinatesOfFactoriesAndCustomers = props.elements;\r\n        //путь сбора заказов \r\n        debugger;\r\n        const waypoints = coordinatesOfFactoriesAndCustomers.map(f => ({\r\n          location: { lat: f.coordinates[0], lng: f.coordinates[1] },\r\n          stopover: true\r\n        }));\r\n        //точка возврата транспорта// не надо\r\n        debugger;\r\n        if (waypoints.length === 1) {\r\n          waypoints.push({  \r\n            location: { lat: coordinatesOfFactoriesAndCustomers[0].coordinates[0], lng: coordinatesOfFactoriesAndCustomers[0].coordinates[1] },\r\n            stopover: true\r\n          });\r\n        }\r\n\r\n        \r\n        const travelMode = window.google.maps.TravelMode.DRIVING;\r\n        const origin = waypoints.shift().location;\r\n        const destination = waypoints.pop().location;\r\n    \r\n        const directionsService = new window.google.maps.DirectionsService();\r\n        directionsService.route(\r\n          {\r\n            origin: origin,\r\n            destination: destination,\r\n            travelMode: travelMode,\r\n            waypoints: waypoints\r\n          },\r\n          (result, status) => {\r\n            console.log(result)\r\n            debugger\r\n            if (status === window.google.maps.DirectionsStatus.OK) {\r\n              setDirections(result);\r\n            } else {\r\n              setError(result);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    });\r\n    if (error) {\r\n        return <h1>{error}</h1>;\r\n    }\r\n    //TODO убрать маркеры, которые выставляются или оставить их, а предыдущие убрать\r\n    //const directionRenderer = new window.google.maps.DirectionsRenderer();\r\n    //directionRenderer.setOptions({suppressMarkers: true});\r\n      return (\r\n        directions && (\r\n        <DirectionsRenderer directions={directions} setOptions = {{suppressMarkers: true}}/>\r\n        )\r\n      );\r\n}",{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":27},{"ruleId":"165","severity":1,"message":"169","line":8,"column":10,"nodeType":"167","messageId":"168","endLine":8,"endColumn":29},{"ruleId":"165","severity":1,"message":"170","line":11,"column":19,"nodeType":"167","messageId":"168","endLine":11,"endColumn":24},{"ruleId":"165","severity":1,"message":"171","line":11,"column":26,"nodeType":"167","messageId":"168","endLine":11,"endColumn":32},{"ruleId":"165","severity":1,"message":"172","line":11,"column":34,"nodeType":"167","messageId":"168","endLine":11,"endColumn":40},{"ruleId":"165","severity":1,"message":"173","line":12,"column":11,"nodeType":"167","messageId":"168","endLine":12,"endColumn":19},{"ruleId":"165","severity":1,"message":"174","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"165","severity":1,"message":"175","line":2,"column":9,"nodeType":"167","messageId":"168","endLine":2,"endColumn":16},{"ruleId":"176","severity":1,"message":"177","line":99,"column":71,"nodeType":"178","messageId":"179","endLine":99,"endColumn":73},{"ruleId":"176","severity":1,"message":"177","line":99,"column":93,"nodeType":"178","messageId":"179","endLine":99,"endColumn":95},{"ruleId":"180","severity":1,"message":"181","line":139,"column":43,"nodeType":"182","messageId":"183","endLine":139,"endColumn":45},{"ruleId":"180","severity":1,"message":"181","line":139,"column":73,"nodeType":"182","messageId":"183","endLine":139,"endColumn":75},{"ruleId":"184","severity":1,"message":"185","line":151,"column":54,"nodeType":"186","messageId":"187","endLine":151,"endColumn":76},{"ruleId":"165","severity":1,"message":"188","line":209,"column":13,"nodeType":"167","messageId":"168","endLine":209,"endColumn":40},{"ruleId":"165","severity":1,"message":"189","line":210,"column":13,"nodeType":"167","messageId":"168","endLine":210,"endColumn":22},{"ruleId":"165","severity":1,"message":"174","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"190","severity":1,"message":"191","line":74,"column":8,"nodeType":"192","endLine":74,"endColumn":28,"suggestions":"193"},{"ruleId":"190","severity":1,"message":"191","line":85,"column":8,"nodeType":"192","endLine":85,"endColumn":29,"suggestions":"194"},{"ruleId":"190","severity":1,"message":"195","line":85,"column":9,"nodeType":"196","endLine":85,"endColumn":28},{"ruleId":"165","severity":1,"message":"174","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"165","severity":1,"message":"197","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":24},{"ruleId":"198","severity":1,"message":"199","line":21,"column":13,"nodeType":"167","messageId":"200","endLine":21,"endColumn":24},{"ruleId":"165","severity":1,"message":"174","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"165","severity":1,"message":"201","line":7,"column":13,"nodeType":"167","messageId":"168","endLine":7,"endColumn":29},{"ruleId":"165","severity":1,"message":"202","line":27,"column":13,"nodeType":"167","messageId":"168","endLine":27,"endColumn":30},{"ruleId":"165","severity":1,"message":"203","line":46,"column":13,"nodeType":"167","messageId":"168","endLine":46,"endColumn":30},{"ruleId":"165","severity":1,"message":"204","line":1,"column":26,"nodeType":"167","messageId":"168","endLine":1,"endColumn":35},{"ruleId":"165","severity":1,"message":"166","line":1,"column":37,"nodeType":"167","messageId":"168","endLine":1,"endColumn":47},{"ruleId":"165","severity":1,"message":"205","line":7,"column":10,"nodeType":"167","messageId":"168","endLine":7,"endColumn":17},{"ruleId":"165","severity":1,"message":"204","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"206","line":1,"column":28,"nodeType":"167","messageId":"168","endLine":1,"endColumn":38},{"ruleId":"165","severity":1,"message":"197","line":1,"column":40,"nodeType":"167","messageId":"168","endLine":1,"endColumn":48},{"ruleId":"165","severity":1,"message":"207","line":1,"column":50,"nodeType":"167","messageId":"168","endLine":1,"endColumn":61},{"ruleId":"165","severity":1,"message":"166","line":1,"column":63,"nodeType":"167","messageId":"168","endLine":1,"endColumn":73},{"ruleId":"165","severity":1,"message":"208","line":4,"column":86,"nodeType":"167","messageId":"168","endLine":4,"endColumn":96},{"ruleId":"165","severity":1,"message":"209","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":17},{"ruleId":"210","severity":1,"message":"211","line":10,"column":17,"nodeType":"212","endLine":10,"endColumn":55},{"ruleId":"210","severity":1,"message":"213","line":27,"column":29,"nodeType":"212","endLine":28,"endColumn":67},{"ruleId":"165","severity":1,"message":"174","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"210","severity":1,"message":"211","line":29,"column":13,"nodeType":"212","endLine":30,"endColumn":107},{"ruleId":"210","severity":1,"message":"211","line":33,"column":13,"nodeType":"212","endLine":34,"endColumn":106},{"ruleId":"165","severity":1,"message":"214","line":4,"column":57,"nodeType":"167","messageId":"168","endLine":4,"endColumn":67},{"ruleId":"165","severity":1,"message":"215","line":42,"column":13,"nodeType":"167","messageId":"168","endLine":42,"endColumn":29},{"ruleId":"216","severity":1,"message":"217","line":65,"column":44,"nodeType":"186","messageId":"218","endLine":65,"endColumn":46},{"ruleId":"180","severity":1,"message":"181","line":9,"column":26,"nodeType":"182","messageId":"183","endLine":9,"endColumn":28},{"ruleId":"165","severity":1,"message":"219","line":10,"column":13,"nodeType":"167","messageId":"168","endLine":10,"endColumn":24},{"ruleId":"165","severity":1,"message":"220","line":11,"column":13,"nodeType":"167","messageId":"168","endLine":11,"endColumn":25},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'getDataThunkCreator' is defined but never used.","'login' is assigned a value but never used.","'logout' is assigned a value but never used.","'userId' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'React' is defined but never used.","'AuthAPI' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'factInd'.","ArrowFunctionExpression","unsafeRefs","'factoriesArrayOfCoordinates' is assigned a value but never used.","'factories' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["223"],["224"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'useState' is defined but never used.","no-const-assign","'loadingForm' is constant.","const","'responceProducts' is assigned a value but never used.","'responceCustomers' is assigned a value but never used.","'responceFactories' is assigned a value but never used.","'useEffect' is defined but never used.","'connect' is defined but never used.","'useReducer' is defined but never used.","'useCallback' is defined but never used.","'mapReducer' is defined but never used.","'useAuth' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'InfoWindow' is defined but never used.","'factoriesMarkers' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'factoryInfo' is assigned a value but never used.","'customerInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [state, state.activateMenu]",{"range":"229","text":"230"},"Update the dependencies array to be: [state]",{"range":"231","text":"232"},[2466,2486],"[state, state.activateMenu]",[2690,2711],"[state]"]